{
  "hash": "620d046485933e85587fcf8f9a88916a",
  "result": {
    "markdown": "---\ntitle: \"NZAVS Retention Graph\"\nauthor: \n  - name: Joseph Bulbulia\n    orcid: 0000-0002-5861-2056\n    affiliation: 1\n    corresponding: yes\n    address: Victoria University of Wellington, New Zealand\n    email: joseph.bulbulia@vuw.ac.nz\ncitation:\n  url: https://go-bayes.github.io/b-causal/\ndate: 2022-11-04\ndate-format: short\ncategories:\n  - Background\n  - NZAVS\nexecute:\n  warning: false\ndraft: false\nimage: \"a_plot.png\"\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n---\n\n\n## Alluvial graph: NZAVS sample retention by wave and sample frame\n\nThe fundamental challenge of longitudinal research is participant retention. This graph presents sample retention for the New Zealand Attitudes and Values Study (NZAVS). @fig-alluvial presents the sample frames within a single graph. @fig-facet presents the sample frames separately. \n\n\n\nFor more information about the NZAVS see: [here](https://www.psych.auckland.ac.nz/en/about/new-zealand-attitudes-and-values-study.html) and [here](https://go-bayes.github.io/reports/posts/nzavs/)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First we import the data, and create an indicator for measured/lost/withdrawn.\nlibrary(\"ggalluvial\") # alluvial graphs\n\n# data sent by Chris Sibley Aug 2021\n\nsampling_data <-\n  haven::read_sav(here::here(\"data\", \"GraphData2.sav\"))\n\n# remove SPSS labels\nsampling_data <- haven::zap_formats(sampling_data)\nsampling_data <- haven::zap_label(sampling_data)\nsampling_data <- haven::zap_widths(sampling_data)\nsampling_data <- haven::zap_labels(sampling_data)\n\n# rename Id variable\nsampling_data <- sampling_data %>%\n  rename(Id = Questionnaire.Num)\n\n## transform data into long form, required for ggalluvial, and rename the waves\ninner_join(\n  sampling_data  %>%\n    dplyr::select(c(\n      Id,\n      c(\n        'T01',\n        \"T02\",\n        'T03',\n        \"T035\",\n        \"T04\",\n        'T05',\n        \"T06\",\n        'T07',\n        \"T08\",\n        \"T09\",\n        \"T10\",\n        \"T11\",\n        \"T12\"\n      )\n    )) %>%      #~~~~ Left side = date component ~~~~~~~~\n    gather(Wave, YearMeasured, -Id) %>%  #~ long form = 1 row per prod per seq   ~\n    mutate(\n      Wave = recode_factor(\n        Wave,\n        T01 = \"2009\",\n        T02 = \"2010\",\n        T03 = \"2011\",\n        T035 = \"2011.5\",\n        T04  = \"2012\",\n        T05 = \"2013\",\n        T06 = \"2014\",\n        T07 = \"2015\",\n        T08 = \"2016\",\n        T09 = \"2017\",\n        T10 = \"2018\",\n        T11 = \"2019\",\n        T12 = \"2020\"\n      )\n    ) %>%\n    arrange(Id),\n  sampling_data %>%\n    dplyr::select(c(Id, starts_with('SampleOriginYear'))) %>%\n    arrange(Id),\n) -> sdf\n\n# define sample origin year\nsdf <- sdf %>%\n  mutate(SampleOriginYear = SampleOriginYear + 2008)\n\n#  Make sample frame into a factor\nsdf$SampleOriginYear <- as.factor(sdf$SampleOriginYear)\n\n# Created levels for \"missing\", \"not yet measured\" and \"deceased\"\n# then filter \"not yet measured\"\n\nsdf.0 <- sdf %>%\n  mutate(Wave = as.numeric(as.character(Wave))) %>%\n  arrange(Wave, Id) %>%\n  group_by(Id) %>%\n  mutate(first = {\n    YearMeasured == 1\n  } %>% {\n    . * !duplicated(.)\n  }) %>%\n  mutate(\n    value_tmp = if_else(first == 1, Wave, NA_real_),\n    firstwave  = mean(value_tmp, na.rm = TRUE) # this is a hack, but works\n  ) %>%\n  mutate(state  = ifelse(\n    YearMeasured == -1,\n    \"deceased\",\n    ifelse(\n      YearMeasured == 0 & Wave < firstwave,\n      \"notyetmeasured\",\n      ifelse(YearMeasured == 0 &\n               Wave > firstwave, \"missing\",\n             \"measured\")\n    )\n  )) %>%\n  dplyr::mutate(Wave = as.factor(Wave)) %>% # return Wave to a factor\n  dplyr::select(Wave, Id, state, YearMeasured, SampleOriginYear) %>%\n  dplyr::filter(state != \"notyetmeasured\") %>%\n  droplevels() %>%\n  arrange(Id, Wave)\n\n# This is to create a \"recovered\" state. Not used but could be useful for modelling recovery:\nsdf.01 <- sdf.0 %>%\n  group_by(Id) %>%\n  mutate(lag_state = dplyr::lag(state, n = 1, default = \"init\"))\n\nsdf.1 <- sdf.01 %>%\n  group_by(Id, Wave) %>%\n  mutate(recovered = ifelse(lag_state == \"missing\" &\n                              state == \"measured\", \"recovered\", state))\n\n\n# We need to back fill the missing values for our alluvial graph.\n# This is OK because a participants original sampling frame does not change.\n\nssdf0 <- sdf.1 %>%  # Fill missing values for Sample.Frame\n  arrange(Id) %>%\n  group_by(Id) %>%\n  fill(SampleOriginYear)  %>%\n  ungroup()\n\n# now we create the \"state_frame\" variable\ntf <- ssdf0 %>%\n  mutate(SampleOriginYear = as.character(SampleOriginYear))\n\nssdf <- tf %>%\n  mutate(state_frame = ifelse(\n    state == \"missing\",\n    \"missing\",\n    ifelse(state == \"deceased\", \"deceased\",\n           SampleOriginYear)\n  ))\nssdf.0 <- ssdf %>%\n  mutate(state_frame = factor(state_frame))\n\n# next we order the levels of the factor to create a pretty graph\nssdf.01 <- ssdf.0 %>%\n  mutate(state_frame = forcats::fct_relevel(\n    state_frame,\n    c(\n      \"2009\",\n      \"2010\",\n      \"2011\",\n      \"2011.5\",\n      \"2012\",\n      \"2013\",\n      \"2014\",\n      \"2015\",\n      \"2016\",\n      \"2017\",\n      \"2018\",\n      \"2019\",\n      \"2020\",\n      \"missing\",\n      \"deceased\"\n    )\n  )) %>%\n  rename(Recovered = recovered) # for pretty table\n```\n:::\n\n\n\n## Alluvial graph: NZAVS sample retention by wave, faceted by sample frame\n\n\n::: {.cell .column-page-right}\n\n```{.r .cell-code}\n# prepare data for graph \ndatsSF <- ssdf.01 %>%\n  group_by(Wave, state_frame, Id) %>%\n  summarise(n = n())\n\n# Graph\n\np <- ggplot(\n  datsSF,\n  aes(\n    x = Wave,\n    stratum = state_frame,\n    alluvium = Id,\n    y = n,\n    fill = state_frame,\n    label = state_frame\n  )\n) +\n  geom_flow() +\n  geom_stratum(alpha = .5) +\n  geom_text(stat = \"stratum\", size = 2) +\n  guides(color = guide_legend(override.aes = list(size = 20))) +\n  scale_x_discrete(position = 'top', expand = c(0, 0)) +\n  scale_y_reverse(\n    expand = c(0.001, 0.001),\n    minor_breaks = seq(0, 70000, by = 1000),\n    breaks = seq(0, 70000, by = 5000)\n  ) +\n  scale_fill_viridis_d(option = \"turbo\") +\n  ggtitle(\"NZAVS alluvial retention graph: waves 2009-2020\")  +\n  theme_bw() +   \n  theme(legend.justification = \"top\") +\n  theme(legend.title = element_blank())  # remove legend title\n\n# to save file in your directory at correct resolution, uncomment below\n# file <- here(\"figs\", paste(\"alluvial_highres_turbo_BW\", \".png\", sep = \"\"))\n\np\n\nggsave(\n  p,\n  path = here::here(here::here(\"posts\", \"nzavsnetwork\" )),\n  width = 8,\n  height = 4.5,\n  units = \"in\",\n  filename = \"a_plot.png\",\n  device = \"png\",\n  scale = 1,\n  dpi = 100,\n  limitsize = TRUE\n)\n```\n\n::: {.cell-output-display}\n![NZAVS alluvial retention graph: waves 2009-2020.](nzavs_network_files/figure-html/fig-alluvial-1.png){#fig-alluvial width=672}\n:::\n:::\n\n::: {.cell .column-page-right}\n\n```{.r .cell-code}\n# prepare data\ndatsSS <- ssdf.01 %>%\n  group_by(Wave, state, SampleOriginYear, Id) %>%\n  summarise(n = n())\n\n\n# Graph\nggplot(datsSS,\n       aes(\n         x = Wave,\n         stratum = state,\n         alluvium = Id,\n         y = n,\n         fill = state,\n         label = state\n       )) +\n  scale_x_discrete(expand = c(.1, .1)) +\n  geom_flow() +\n  geom_stratum(alpha = .5) +\n  geom_text(stat = \"stratum\", size = 2) +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(position = 'top') +\n  scale_y_reverse(\n    expand = c(0.001, 0.001),\n    minor_breaks = seq(0, 70000, by = 1000),\n    breaks = seq(0, 70000, by = 1000)\n  ) +\n  facet_grid(SampleOriginYear ~ ., scales = \"free\", space = \"free\") +\n  theme(strip.text.y = element_text(angle = 0)) +\n  scale_fill_viridis_d(option = \"viridis\") +\n  # scale_fill_viridis_d(option=\"turbo\") + # another option\n  ggtitle(\"NZAVS alluvial retention graph: waves 2009-2020\",\n          subtitle  = \"Facets are sample frames\")  +\n  theme_bw() +\n  theme(legend.title = element_blank())  # remove legend title\n```\n\n::: {.cell-output-display}\n![NZAVS alluvial retention graph: facets are sample frames.](nzavs_network_files/figure-html/fig-facet-1.png){#fig-facet width=672}\n:::\n:::\n\n\n",
    "supporting": [
      "nzavs_network_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}