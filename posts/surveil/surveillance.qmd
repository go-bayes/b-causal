---
title: "Description of Public Attitudes to New Zealand Government Surveillance"
author: 
  - name: Joseph Bulbulia
    orcid: 0000-0002-5861-2056
    affiliation: Victoria University of Wellington,  New Zealand
    corresponding: yes
    address: Victoria University of
format: html
title-block-style: plain
bibliography: references.bib
date: 2023-MAR-03
date-format: short
citation:
  url: https://go-bayes.github.io/b-causal-lab/
execute:
  echo: false
  warning: false
  message: false
  error: false
---



```{r, include = FALSE}
# libraries and functions
# read libraries
source("https://raw.githubusercontent.com/go-bayes/templates/main/functions/libs2.R")

# read functions
source("https://raw.githubusercontent.com/go-bayes/templates/main/functions/funs.R")

# for saving models  # ONLY FOR JOSEPH BULUBLIA -- SET TO YOUR PREFERRED FOLDERS
push_mods <-
  fs::path_expand("~/The\ Virtues\ Project\ Dropbox/outcomewide/mods")
push_figs <-
  fs::path_expand("~/Users/joseph/The\ Virtues\ Project\ Dropbox/outcomewide/figs")

# read data # ONLY FOR JOSEPH BULUBLIA
pull_path <-
  fs::path_expand(
    "~/The\ Virtues\ Project\ Dropbox/Joseph\ Bulbulia/00Bulbulia\ Pubs/2021/DATA/ldf.5"
  )
```




options(scipen = 999)

# You can find more information about the NZAVS:[HERE](https://www.psych.auckland.ac.nz/en/about/new-zealand-attitudes-and-values-study.html)

# step one: import libraries:
source("https://raw.githubusercontent.com/go-bayes/templates/main/functions/libs2.R")


# read functions
source("https://raw.githubusercontent.com/go-bayes/templates/main/functions/funs.R")

# read data

# set your folder path : unique to each user

# for saving models

pull_path <-
  fs::path_expand(
    "/Users/joseph/v-project\ Dropbox/Joseph\ Bulbulia/00Bulbulia\ Pubs/2021/DATA/time13"
  )

# read data: note that you need use the arrow package
dat <- arrow::read_parquet(pull_path)

# check data
str(dat)

# count unique individuals
skimr::n_unique(dat$Id)

# more robust option for counting:
length(unique(dat$Id))

# participants by wave,
dat |>
  filter(YearMeasured == 1) |>
  droplevels() |>
  arrange(Wave) |>
  group_by(Wave) |>
  count()



